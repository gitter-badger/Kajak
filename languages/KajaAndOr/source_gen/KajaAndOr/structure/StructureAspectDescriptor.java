package KajaAndOr.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.impl.CompiledConceptDescriptor;
import jetbrains.mps.smodel.runtime.interpreted.StructureAspectInterpreted;

public class StructureAspectDescriptor implements jetbrains.mps.smodel.runtime.StructureAspectDescriptor {
  private static String[] stringSwitchCases_1htk8d_a0a0a = new String[]{"KajaAndOr.structure.And", "KajaAndOr.structure.LogicalOperator", "KajaAndOr.structure.Or"};

  public StructureAspectDescriptor() {
  }

  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a, conceptFqName)) {
      case 0:
        return new CompiledConceptDescriptor("KajaAndOr.structure.And", "KajaAndOr.structure.LogicalOperator", false, new String[]{"KajaAndOr.structure.LogicalOperator"}, new String[]{}, new String[]{});
      case 1:
        return new CompiledConceptDescriptor("KajaAndOr.structure.LogicalOperator", "Kaja.structure.LogicalExpression", false, new String[]{"Kaja.structure.LogicalExpression"}, new String[]{}, new String[]{});
      case 2:
        return new CompiledConceptDescriptor("KajaAndOr.structure.Or", "KajaAndOr.structure.LogicalOperator", false, new String[]{"KajaAndOr.structure.LogicalOperator"}, new String[]{}, new String[]{});
      default:
        return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
    }
  }
}
