package Kajak.sandbox.sandbox;

/*Generated by MPS */

import JavaKajak.runtime.KajakFrame;
import JavaKajak.runtime.Direction;

public class Karel extends KajakFrame {
  public Karel() {
  }

  protected void perform() {
    if (canMove()) {
      moveKaja();
      pause();
    } else {
      reportError("Oops, There's a wall in front of me. I can't make a step forward.");
      return;
    }
    if (canMove()) {
      moveKaja();
      pause();
    } else {
      reportError("Oops, There's a wall in front of me. I can't make a step forward.");
      return;
    }
    while (!(heading(Direction.south))) {
      turnLeft();
      pause();
    }
    while (!(isWall())) {
      if (canMove()) {
        moveKaja();
        pause();
      } else {
        reportError("Oops, There's a wall in front of me. I can't make a step forward.");
        return;
      }
    }
    turnRight();
    bounce();
    // Routine definitions 
    // Bounces off the wall recursively 
  }

  public void turnRight() {
    for (int i = 0; i < 3; i++) {
      turnLeft();
      pause();
    }
  }

  public void turnAround() {
    turnLeft();
    pause();
    turnLeft();
    pause();
  }

  public void bounce() {
    if (isWall()) {
      turnAround();
    } else {
      if (canMove()) {
        moveKaja();
        pause();
      } else {
        reportError("Oops, There's a wall in front of me. I can't make a step forward.");
        return;
      }
      bounce();
      if (canMove()) {
        moveKaja();
        pause();
      } else {
        reportError("Oops, There's a wall in front of me. I can't make a step forward.");
        return;
      }
    }
  }

  public static void main(String[] args) {
    Karel script = new Karel();
    script.initializeComponents();
    script.run();
  }
}
